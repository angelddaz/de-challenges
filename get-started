# launch ec2 instance. create keys if needed and download.
sudo chmod 400 /home/angel/cloud-dev/ec2keys.pem
ssh -i /home/angel/cloud-dev/ec2keys.pem ubuntu@ec2-54-188-31-201.us-west-2.compute.amazonaws.com

# You're now in your ec2 instance with ubuntu user
sudo passwd
su
sudo vim /etc/sudoers
exit

# download OS-level dependencies
sudo apt-get update && sudo apt-get install -y software-properties-common git make ansible
sudo apt-add-repository --yes --update ppa:ansible/ansible

# download automation software
git clone https://github.com/angelddaz/de-devtools.git
cd de-devtools
sudo chmod 756 ~/.ansible
make local

# install ingredients for cloud code editor
pip3 install notebook
sudo apt-get install ipython3
sudo apt install jupyter-notebook

# create jupyter pw
ipython3
from IPython.lib import passwd
passwd()
Enter password: [Create password and press enter] Verify password: [Press enter]
'sha1:98ff0e580111:12798c72623a6eecd54b51c006b1050f0ac1a62d' # Copy this whole string
# above string will be used in line 58
exit

# Advanced Notebook Config
sudo jupyter-notebook --generate-config
    # pwd = /home/ubuntu
mkdir certs
cd certs
openssl req -x509 -nodes -days 365 -newkey rsa:1024 -keyout mycert.pem -out mycert.pem
    # enter blank for all questions

sudo vim ~/.jupyter/jupyter_notebook_config.py
# insert the following at the beginning of the file
```
c = get_config()

# Kernel config
c.IPKernelApp.pylab = 'inline'  # if you want plotting support always in your notebook

# Notebook config
c.NotebookApp.certfile = u'/home/ubuntu/certs/mycert.pem' #location of your certificate file
c.NotebookApp.ip = '*'
c.NotebookApp.open_browser = False  #so that the ipython notebook does not opens up a browser by default
c.NotebookApp.password = u'sha1:98ff0e580111:12798c72623a6eecd54b51c006b1050f0ac1a62d'  #the encrypted password we generated above in line 34
# Set the port to 8888, the port we set up in the AWS EC2 set-up
c.NotebookApp.port = 8888
```
sudo chown $USER:$USER /home/ubuntu/certs/mycert.pem

# After finishing configuration of jupyter
# allow all traffic from your IP address by going to `NETWORK & SECURITY` > `Security Groups`
# inside of aws console

# Visit https://{aws_host_name}:{port number}
# and proceed with password created in line 34.

# You may now write prototype data pipelines in the cloud
